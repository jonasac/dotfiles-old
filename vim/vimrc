" Bootstrap and plugins -------------------------- {{{
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
Bundle 'nanotech/jellybeans.vim'
Bundle 'guns/vim-clojure-static'
Bundle 'tpope/vim-fireplace'
Bundle 'tpope/vim-fugitive'
Bundle 'kien/ctrlp.vim'
Bundle 'benmills/vimux'
Bundle 'tpope/vim-classpath'
Bundle 'ervandew/supertab'
set rtp+=/usr/local/Cellar/go/1.0.3/misc/vim
filetype plugin indent on
syntax on
" }}}
set noeb vb t_vb=               " Turn of the bells
set encoding=utf-8              " Set default encoding to UTF-8
set cursorline                  " See where the cursor is
set tabstop=4                   " a tab is four spaces
set softtabstop=4               " insert/delete 4 spaces when hitting TAB/BACKSPACE
set expandtab                   " use spaces, not tabs
set shiftwidth=4                " an autoindent (with <<) is two spaces
set autoindent                  " automatically indent
set backspace=indent,eol,start  " backspace through everything in insert mode
set scrolloff=5                 " Make vim stay 5 lines above the bottom when scrolling
set title                       " Show filename in terminal frame or window frame(GVIM)g
set ofu=syntaxcomplete#Complete " omniCompletion is awesomesauce
set hidden                      " Allow chaning buffer without saving
set autowrite                   " Autowrite the file when moving to a different buffer
set autoread                    " Automatically reread file when contents on disk change
set splitbelow                  " Put new window below the current one
set splitright                  " Put new window to the right of current one
set modelines=0                 " Modelines ain't safe
set wildmenu                    " Enable the wildmenu
set wildmode=longest:full,full  " Make the wildmenu behave
set showmatch                   " When a bracket is inserted quickly jump to the matching one and back
set wrap                        " Wrap long lines
set textwidth=79                " Text never wider than 80chars
"set formatoptions=qrn1
set backup                      " Enable backups
set undofile                    " Let vim save undo data in a file so that it can be restored even itf the file is closed
set showbreak=↪                 " Show linebreaks 
colorscheme jellybeans
" Backup stuff ---------------- {{{
set backupdir=~/.vim/tmp/backup//     " Keep backups in its own folder
set undodir=~/.vim/tmp/undo//
set directory=~/.vim/tmp/swap//        " Keep swapfiles in its own folder
if !isdirectory(expand(&undodir))
	call mkdir(expand(&undodir), "p")
endif
if !isdirectory(expand(&backupdir))
	call mkdir(expand(&backupdir), "p")
endif
if !isdirectory(expand(&directory))
	call mkdir(expand(&directory))
endif
" }}}
" Listchars ----------------------------------- {{{
set list                        " Show invisible character
set listchars=""                " Reset the list chars
set listchars=tab:\▸\           " Show tabs as spacesj
set listchars+=trail:.          " Show trailing spaces as dots
set listchars+=extends:>        " When lines go off screen
set listchars+=precedes:<       " When lines go off screen
" }}}
" Search settings -------------------------------------- {{{
set hlsearch                    " Highlight matches
set incsearch                   " Incremental searching
set ignorecase                  " Searches are case insensitive
set smartcase                   " ... unless they contain at least one upcase letter
" }}}
" GUI Settings --------------------------- {{{
if has("gui_running")
  set guifont=Monaco:h12
  set guioptions -=m
  set guioptions -=T
  set guioptions -=r
  if has("autocmd")
    " Automatically resize splits when resizing MacVim window "
    autocmd VimResized * wincmd =

  endif
endif
" }}}
" Status Bar --------------------------------------------------- {{{
set laststatus=2
set statusline=
set statusline=%f%w%h%m%r%y
set statusline+=[%{strlen(&fenc)?&fenc:'none'}/%{&ff}]
set statusline+=%=
set statusline+=[%l/%L]
set statusline+=%{exists('g:loaded_fugitive')?fugitive#statusline():''}
" }}}
" File Settings -------------------------------------------------- {{{
augroup filetype_vim
	autocmd!
	autocmd FileType vim setlocal foldmethod=marker
augroup END
" }}}
" Bindings ------------------------------- {{{
let mapleader = " "
noremap <leader>ev :edit $MYVIMRC<cr>
noremap <leader>sv :source $MYVIMRC<cr>
nnoremap <leader><space> :nohlsearch<cr>
nnoremap <leader>bn :bNext<cr>
if !exists(":W")
    command W w
endif
if !exists(":Q")
    command Q q
endif
inoremap jk <Esc>
inoremap <esc> <nop>
inoremap <esc> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
" }}}
