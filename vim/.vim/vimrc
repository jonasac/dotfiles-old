" Bootstrap and plugins 
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'ervandew/supertab'
Plugin 'sheerun/vim-polyglot'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-sensible'
call vundle#end()
filetype plugin indent on
syntax enable

set encoding=utf-8 " Use utf-8 as default encoding
set expandtab " Use the proper amount of spaces instead of tabs
set hidden " Allow us to leave the buffer even though the contents hasn't been written to disk yet
set shiftround " Round indent to multiple of shiftwidth
set wildmenu " Better command mode completion
set wildignore+=*.class,*.jar,out,target
set hlsearch " Highlight all search matches
set ignorecase " Don't pay attention the case when searching
set smartcase " If the string has capital letters, force case sensitive searching
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]
set background=dark

" Backup
set backup                      " Enable backups
if version >= 730
  set undofile                " Let vim save undo data in a file so that it can be restored even itf the file is closed
  set undodir=~/.vim/tmp/undo//
  if !isdirectory(expand(&undodir))
    call mkdir(expand(&undodir), "p")
  endif
endif
set backupdir=~/.vim/tmp/backup//     " Keep backups in its own folder
set directory=~/.vim/tmp/swap//        " Keep swapfiles in its own folder
if !isdirectory(expand(&backupdir))
  call mkdir(expand(&backupdir), "p")
endif
if !isdirectory(expand(&directory))
  call mkdir(expand(&directory))
endif

" Keybindings
let mapleader = " "
nnoremap <leader><space> :nohlsearch<cr>
nnoremap <leader>b :CtrlPBuffer<cr>
nnoremap <leader>s :w<cr>
if !exists(":W")
  command W w
endif
if !exists(":Q")
  command Q q
endif
inoremap <left> <nop>
inoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

au FileType scala setl sw=2 sts=2et
au FileType ruby setl sw=2 sts=2 et
au FileType vim setl sw=2 sts=2 et
au FileType haskell setl sw=4 sts=4 et
au FileType javascript setl sw=2 sts=2 et
au FileType html setl sw=2 sts=2 et
au FileType json setl sw=4 sts=4 et
au FileType perl setl sw=4 sts=4 et
au FileType html setl sw=2 sts=4 et
au FileType yaml setl sw=2 sts=2 et
